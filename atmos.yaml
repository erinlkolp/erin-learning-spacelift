base_path: "./"

components:
  terraform:
    base_path: "components/terraform"
    apply_auto_approve: false
    deploy_run_init: true
    init_run_reconfigure: true
    auto_generate_backend_file: false
    settings:
      depends_on:
        1:
          # If the `context` (namespace, tenant, environment, stage) is not provided,
          # the `component` is from the same Atmos stack as this component
          component: "component/weather"
        2:
          # This component (in any stage) depends on `test/test-component`
          # from the `dev` stage (in any `environment` and any `tenant`)
          component: "component/weather"
          stage: "dev"
        3:
          # This component depends on `my-component`
          # from the `tenant1-ue2-staging` Atmos stack
          component: "my-component"
          tenant: "tenant1"
          environment: "ue2"
          stage: "staging"

      spacelift:
        terraform_workflow_tool: OPEN_TOFU
        # enable the stack in Spacelift
        workspace_enabled: true
        administrative: true

        # auto deploy this stack
        autodeploy: true

        # commands to run before init
        before_init: []

        # Specify which component directory to use
        component_root: components/terraform/weather

        description: Our Weather Station

        # whether to auto destroy resources if the stack is deleted
        stack_destructor_enabled: false

        worker_pool_name: null

        # Do not add normal set of child policies to admin stacks
        policies_enabled: []

        # set explicitly below
        administrative_trigger_policy_enabled: false

        # policies to enable
        policies_by_id_enabled:
          - trigger-administrative-policy
    vars:
      enabled: true

stacks:
  base_path: "stacks"
  included_paths:
    - "deploy/**/*"
  excluded_paths:
    - "**/_defaults.yaml"
  name_pattern: "{stage}"

logs:
  file: "/dev/stderr"
  level: Info
